package config

import (
	"github.com/kelseyhightower/envconfig"
	"github.com/rs/zerolog/log"
)

// Config contains all possible variables
type Config struct {
	Host         string `envconfig:"HOST" default:"0.0.0.0"`
	Port         string `envconfig:"PORT" default:"8080"`
	OtlConnector string `envconfig:"OTL_CONNECTOR" default:"0.0.0.0:4317"`
	DatabaseURL  string `envconfig:"DATABASE_URL" default:"postgresql://user:password@localhost:5432/{{.ProjectName}}?sslmode=disable"`
}

// Load attempts to read all config vars and return the struct or an error
func Load() (*Config, error) {
	var c Config
	if err := envconfig.Process("service", &c); err != nil {
		return nil, err
	}
	return &c, nil
}

// MustLoad will Load all config vars or cause a fatal exit
func MustLoadConfig() *Config {
	c, err := Load()
	if err != nil {
		log.Fatal().Err(err).Msg("error loading app config")
	}
	return c
}
